{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simon\\\\Documents\\\\GitHub\\\\comi\\\\src\\\\components\\\\Mail\\\\Task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Task.scss\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios').default;\n\nconst Task = props => {\n  _s();\n\n  let {\n    trigger,\n    data\n  } = props;\n  const [finished, setFinished] = useState(false);\n\n  let changeFinished = (id, finished) => {\n    if (finished == 1) {\n      let bool = 0;\n      axios({\n        method: 'put',\n        url: `http://localhost:3000/tasks?id=${id}&finished=${bool}`\n      });\n      toast(`Vous avez fini la mission bravo!`);\n    } else {\n      let bool = 1;\n      axios({\n        method: 'put',\n        url: `http://localhost:3000/tasks?id=${id}&finished=${bool}`\n      });\n      toast(`La mission est de nouveau en cours!`);\n    }\n\n    document.location.reload();\n  };\n\n  if (trigger == true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => props.setTrigger(false),\n        src: \"./img/mail/back.png\",\n        alt: \"\",\n        srcset: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Voici la liste des t\\xE2ches \\xE0 faire pour le \", data[0].date.substr(0, 10)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), data.map((task, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: task.finished == 1 ? 'finished' : null,\n            children: [\" - \", task.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: () => changeFinished(task.id, task.finished),\n            src: \"./img/calendar/check_mark.png\",\n            alt: \"\",\n            srcset: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n};\n\n_s(Task, \"77cTgiM2pCAVbqfnphP3sMS2sk0=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/Users/simon/Documents/GitHub/comi/src/components/Mail/Task.js"],"names":["React","useEffect","useState","ToastContainer","toast","axios","require","default","Task","props","trigger","data","finished","setFinished","changeFinished","id","bool","method","url","document","location","reload","setTrigger","date","substr","map","task","i","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACpB,MAAI;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBF,KAAxB;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA2BX,QAAQ,CAAE,KAAF,CAAzC;;AAEA,MAAIY,cAAc,GAAG,CAACC,EAAD,EAAKH,QAAL,KAAkB;AAEnC,QAAIA,QAAQ,IAAI,CAAhB,EAAmB;AACf,UAAII,IAAI,GAAG,CAAX;AACAX,MAAAA,KAAK,CAAC;AACFY,QAAAA,MAAM,EAAE,KADN;AAEFC,QAAAA,GAAG,EAAG,kCAAiCH,EAAG,aAAYC,IAAK;AAFzD,OAAD,CAAL;AAIAZ,MAAAA,KAAK,CAAE,kCAAF,CAAL;AAEH,KARD,MASI;AACA,UAAIY,IAAI,GAAG,CAAX;AACAX,MAAAA,KAAK,CAAC;AACFY,QAAAA,MAAM,EAAE,KADN;AAEFC,QAAAA,GAAG,EAAG,kCAAiCH,EAAG,aAAYC,IAAK;AAFzD,OAAD,CAAL;AAIAZ,MAAAA,KAAK,CAAE,qCAAF,CAAL;AACH;;AACDe,IAAAA,QAAQ,CAACC,QAAT,CAAkBC,MAAlB;AACH,GApBD;;AAsBA,MAAIX,OAAO,IAAI,IAAf,EAAqB;AACjB,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BAEI;AAAK,QAAA,OAAO,EAAE,MAAMD,KAAK,CAACa,UAAN,CAAiB,KAAjB,CAApB;AAA6C,QAAA,GAAG,EAAC,qBAAjD;AAAuE,QAAA,GAAG,EAAC,EAA3E;AAA8E,QAAA,MAAM,EAAC;AAArF;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,uEAA+CX,IAAI,CAAC,CAAD,CAAJ,CAAQY,IAAR,CAAaC,MAAb,CAAoB,CAApB,EAAsB,EAAtB,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIKb,IAAI,CAACc,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,KAAa;AACnB,4BACI;AAAA,kCACI;AAAG,YAAA,SAAS,EAAED,IAAI,CAACd,QAAL,IAAiB,CAAjB,GAAqB,UAArB,GAAkC,IAAhD;AAAA,8BAA0Dc,IAAI,CAACE,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,OAAO,EAAE,MAAMd,cAAc,CAACY,IAAI,CAACX,EAAN,EAAUW,IAAI,CAACd,QAAf,CAAlC;AAA4D,YAAA,GAAG,EAAC,+BAAhE;AAAgG,YAAA,GAAG,EAAC,EAApG;AAAuG,YAAA,MAAM,EAAC;AAA9G;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARA,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH,GAjBD,MAkBI;AACA,WAAO,IAAP;AACH;AAEJ,CAhDD;;GAAMJ,I;;KAAAA,I;AAkDN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Task.scss\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst axios = require('axios').default;\r\n\r\nconst Task = (props) => {\r\n    let { trigger, data } = props\r\n    const [finished, setFinished ] = useState (false)\r\n\r\n    let changeFinished = (id, finished) => {\r\n    \r\n        if (finished == 1) {\r\n            let bool = 0\r\n            axios({\r\n                method: 'put',\r\n                url: `http://localhost:3000/tasks?id=${id}&finished=${bool}`,\r\n            })\r\n            toast(`Vous avez fini la mission bravo!`)\r\n\r\n        }\r\n        else{\r\n            let bool = 1\r\n            axios({\r\n                method: 'put',\r\n                url: `http://localhost:3000/tasks?id=${id}&finished=${bool}`,\r\n            })\r\n            toast(`La mission est de nouveau en cours!`)\r\n        }\r\n        document.location.reload();\r\n    }\r\n\r\n    if (trigger == true) {\r\n        return (\r\n            <div className=\"task\">\r\n                \r\n                <img onClick={() => props.setTrigger(false)} src=\"./img/mail/back.png\" alt=\"\" srcset=\"\"/>\r\n                <h1>Voici la liste des tâches à faire pour le {data[0].date.substr(0,10)}</h1>\r\n                {data.map((task, i) => {     \r\n                    return (\r\n                        <div> \r\n                            <p className={task.finished == 1 ? 'finished' : null}> - {task.content}</p>\r\n                            <img onClick={() => changeFinished(task.id, task.finished)} src=\"./img/calendar/check_mark.png\" alt=\"\" srcset=\"\"/>\r\n                        </div>\r\n                       \r\n                        ) \r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return null\r\n    }\r\n   \r\n};\r\n\r\nexport default Task;"]},"metadata":{},"sourceType":"module"}