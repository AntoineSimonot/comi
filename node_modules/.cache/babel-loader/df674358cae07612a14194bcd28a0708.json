{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simon\\\\Documents\\\\GitHub\\\\comi\\\\src\\\\pages\\\\Calendrier.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport HeadApp from \"../components/HeadApp\";\nimport \"./Calendar.scss\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Task from \"../components/Mail/Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios').default;\n\nconst Calendrier = () => {\n  _s();\n\n  const [value, setValue] = useState(new Date());\n  const [trigger, setTrigger] = useState(false);\n  const [data, setData] = useState({});\n\n  const onChange = value => {\n    setValue(value);\n    axios({\n      method: 'get',\n      url: `http://localhost:3000/tasks?id=${localStorage.getItem(\"id\")}&date=${value.toLocaleDateString().replaceAll('/', '-').split(\"-\").reverse().join(\"-\")}`\n    }).then(response => {\n      if (response.data.status == 200) {\n        // setData(Object.values(response.data.data))\n        console.log(Object.values(response.data.data));\n        setTrigger(true);\n      } else toast(`Vous n'avez rien de prévu pour le ${value.toLocaleDateString().replaceAll('/', '-').split(\"-\").reverse().join(\"-\")}`);\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Calendar-Page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        value: value,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Task, {\n      trigger: trigger,\n      setTrigger: setTrigger,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Calendrier, \"m856wyg87mKTECTDJIsFqkWpkcU=\");\n\n_c = Calendrier;\nexport default Calendrier;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendrier\");","map":{"version":3,"sources":["C:/Users/simon/Documents/GitHub/comi/src/pages/Calendrier.js"],"names":["React","useEffect","useState","Calendar","HeadApp","ToastContainer","toast","Task","axios","require","default","Calendrier","value","setValue","Date","trigger","setTrigger","data","setData","onChange","method","url","localStorage","getItem","toLocaleDateString","replaceAll","split","reverse","join","then","response","status","console","log","Object","values","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,kCAAP;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAO,iBAAP;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,OAAOC,IAAP,MAAiB,yBAAjB;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAIY,IAAJ,EAAD,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAE,KAAF,CAAtC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMiB,QAAQ,GAAIP,KAAD,IAAW;AACxBC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AAEAJ,IAAAA,KAAK,CAAC;AACFY,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,GAAG,EAAG,kCAAiCC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAA2B,SAAQX,KAAK,CAACY,kBAAN,GAA2BC,UAA3B,CAAsC,GAAtC,EAA2C,GAA3C,EAAgDC,KAAhD,CAAsD,GAAtD,EAA2DC,OAA3D,GAAqEC,IAArE,CAA0E,GAA1E,CAA+E;AAFvJ,KAAD,CAAL,CAGKC,IAHL,CAGWC,QAAD,IAAc;AACpB,UAAIA,QAAQ,CAACb,IAAT,CAAcc,MAAd,IAAwB,GAA5B,EAAgC;AAC9B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,MAAP,CAAcL,QAAQ,CAACb,IAAT,CAAcA,IAA5B,CAAZ;AACAD,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAJD,MAMEV,KAAK,CAAE,qCAAoCM,KAAK,CAACY,kBAAN,GAA2BC,UAA3B,CAAsC,GAAtC,EAA2C,GAA3C,EAAgDC,KAAhD,CAAsD,GAAtD,EAA2DC,OAA3D,GAAqEC,IAArE,CAA0E,GAA1E,CAA+E,EAArH,CADH;AAIL,KAbH,EAaMQ,KAAD,IAAW;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,KAfH;AAkBD,GArBH;;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAExB,KAAjB;AAAwB,QAAA,QAAQ,EAAEO;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,IAAD;AAAM,MAAA,OAAO,EAAEJ,OAAf;AAAwB,MAAA,UAAU,EAAGC,UAArC;AAAiD,MAAA,IAAI,EAAEC;AAAvD;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAvCD;;GAAMN,U;;KAAAA,U;AAyCN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport HeadApp from \"../components/HeadApp\";\r\nimport \"./Calendar.scss\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Task from \"../components/Mail/Task\";\r\nconst axios = require('axios').default;\r\n\r\nconst Calendrier = () => {\r\n\r\n    const [value, setValue] = useState(new Date());\r\n    const [trigger, setTrigger] = useState (false)\r\n    const [data, setData] = useState({})\r\n\r\n    const onChange = (value) => {\r\n        setValue(value)\r\n       \r\n        axios({\r\n            method: 'get',\r\n            url: `http://localhost:3000/tasks?id=${localStorage.getItem(\"id\")}&date=${value.toLocaleDateString().replaceAll('/', '-').split(\"-\").reverse().join(\"-\")}`,\r\n          }).then((response) => {\r\n            if (response.data.status == 200){\r\n              // setData(Object.values(response.data.data))\r\n              console.log(Object.values(response.data.data))\r\n              setTrigger(true)\r\n            }\r\n            else(\r\n              toast(`Vous n'avez rien de prévu pour le ${value.toLocaleDateString().replaceAll('/', '-').split(\"-\").reverse().join(\"-\")}`)\r\n            )\r\n            \r\n          }, (error) => {\r\n            console.log(error);\r\n          });\r\n\r\n\r\n      } \r\n\r\n    return (\r\n        <div className=\"Calendar-Page\">\r\n            <div> </div>\r\n            <div>\r\n                <Calendar value={value} onChange={onChange}/>\r\n            </div>\r\n            <ToastContainer />\r\n            <Task trigger={trigger} setTrigger= {setTrigger} data={data}></Task>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Calendrier;"]},"metadata":{},"sourceType":"module"}