{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simon\\\\Documents\\\\GitHub\\\\comi\\\\src\\\\components\\\\Mail\\\\TabsMailView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport \"./TabsMailView.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios').default;\n\nconst TabsMailView = props => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [fetch, setFetch] = useState(true);\n  const [url, setUrl] = useState([\"unread\"]);\n  const {\n    ChangeURL\n  } = props;\n  useEffect(() => {\n    if (ChangeURL != url) {\n      if (!url.includes(\"/\")) {\n        setUrl(ChangeURL);\n        setFetch(true);\n      } else {\n        console.log(\"test\");\n      }\n    }\n\n    if (fetch) {\n      axios.get(`http://localhost:3000/messages/${url}`).then(function (response) {\n        setData(response.data);\n        setFetch(false);\n      });\n    }\n  }, [data, ChangeURL, fetch, url]);\n\n  const changeVariableProject = urlName => {\n    setUrl(urlName);\n    setFetch(true);\n  };\n\n  const mailCreation = () => {\n    const liste = [];\n\n    if (url !== \"project\") {\n      for (const message of data) {\n        liste.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            class: \"check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"sender-img\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"profil-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"mail-notification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"mail-title\",\n            children: message.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"mail-content\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this));\n      }\n    } else {\n      for (const projet of data) {\n        liste.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: () => changeVariableProject(`unread/${projet.name}`),\n            class: \"mail-title\",\n            children: projet.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this));\n      }\n    }\n\n    return liste;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-msgPage\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"content-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mail\",\n        children: mailCreation()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TabsMailView, \"eYDCyvX4uGhPhV3+P8rnfMK9eT4=\");\n\n_c = TabsMailView;\nexport default TabsMailView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabsMailView\");","map":{"version":3,"sources":["C:/Users/simon/Documents/GitHub/comi/src/components/Mail/TabsMailView.js"],"names":["React","useEffect","useState","SearchBar","axios","require","default","TabsMailView","props","data","setData","fetch","setFetch","url","setUrl","ChangeURL","includes","console","log","get","then","response","changeVariableProject","urlName","mailCreation","liste","message","push","title","content","projet","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport \"./TabsMailView.scss\";\r\nconst axios = require('axios').default;\r\n\r\n\r\n\r\nconst TabsMailView = (props) => {\r\n\r\n    \r\n  \r\n    const [data, setData] = useState ([])\r\n    const [fetch, setFetch] = useState (true)\r\n    const [url, setUrl] = useState ([\"unread\"])\r\n    const { ChangeURL } = props\r\n  \r\n\r\n    useEffect(() => {\r\n      if(ChangeURL != url){\r\n        if (!url.includes(\"/\")) {\r\n          setUrl(ChangeURL)\r\n          setFetch(true)\r\n        }\r\n        else{\r\n          console.log(\"test\")\r\n        }\r\n      }\r\n\r\n      if (fetch) {\r\n          axios.get(`http://localhost:3000/messages/${url}`).then(function (response) {\r\n          setData(response.data);\r\n          setFetch(false)\r\n        })\r\n      } \r\n\r\n    }, [data,ChangeURL,fetch, url])\r\n\r\n\r\n    const changeVariableProject = (urlName) => {\r\n      setUrl(urlName);\r\n      setFetch(true)\r\n    } \r\n    \r\n    const mailCreation = () => {\r\n      const liste = []\r\n\r\n      if (url !== \"project\") {\r\n        for (const message of data) {\r\n          liste.push(\r\n          <div>\r\n            <input type=\"checkbox\" class=\"check\" />\r\n            <div class=\"sender-img\">\r\n              <div class=\"profil-img\"></div>\r\n              <div class=\"mail-notification\"></div>\r\n            </div>\r\n            <p class=\"mail-title\">{message.title}</p>\r\n            <p class=\"mail-content\">\r\n            {message.content}\r\n            </p>\r\n          </div>\r\n          )\r\n        }\r\n      }\r\n      else{\r\n        for (const projet of data) {\r\n          liste.push(\r\n          <div>\r\n            <p onClick={() => changeVariableProject(`unread/${projet.name}`)} class=\"mail-title\">{projet.name}</p>\r\n          </div>\r\n          )\r\n        }\r\n      }\r\n    return liste\r\n  };\r\n\r\n  return (\r\n    <div className=\"content-msgPage\">\r\n      <SearchBar />\r\n      <div class=\"content-message\">\r\n        <span>Date</span>\r\n        <div class=\"mail\">\r\n        {mailCreation()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabsMailView;\r\n"]},"metadata":{},"sourceType":"module"}