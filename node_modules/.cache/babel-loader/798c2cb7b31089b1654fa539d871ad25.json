{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simon\\\\Documents\\\\GitHub\\\\comi\\\\src\\\\components\\\\Mail\\\\TabsMailView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport Show from \"./Show\";\nimport \"./TabsMailView.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios').default;\n\nconst TabsMailView = props => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [fetch, setFetch] = useState(true);\n  const [url, setUrl] = useState([\"unread\"]);\n  const [projet, setprojet] = useState(false);\n  const [show, setShow] = useState(false);\n  let {\n    ChangeURL\n  } = props;\n  useEffect(() => {\n    if (ChangeURL != url) {\n      setUrl(ChangeURL);\n      setFetch(true);\n    }\n\n    if (fetch) {\n      axios.get(`http://localhost:3000/messages/${url}`).then(function (response) {\n        setData(response.data);\n        setFetch(false);\n      });\n    }\n  }, [data, ChangeURL, fetch, url, projet]);\n\n  const changeVariableProject = urlName => {\n    setUrl(urlName);\n    setFetch(true);\n  };\n\n  const showMail = id => {\n    setShow(true);\n  };\n\n  const mailCreation = () => {\n    const liste = [];\n\n    if (url !== \"project\") {\n      for (const message of data) {\n        liste.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          onClick: () => showMail(message.title),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            class: \"check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"sender-img\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"profil-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"mail-notification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"mail-title\",\n            children: message.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"mail-content\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this));\n      }\n    } else {\n      for (const projet of data) {\n        liste.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: () => changeVariableProject(`unread/${projet.name}`),\n            class: \"mail-title\",\n            children: projet.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this));\n      }\n    }\n\n    return liste;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-msgPage\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mail\",\n        children: [mailCreation(), (() => {\n          if (show) {\n            return /*#__PURE__*/_jsxDEV(Show, {\n              id: show\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this);\n          }\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TabsMailView, \"qCxBvQnwPloz1EMFZYv/awYCqUw=\");\n\n_c = TabsMailView;\nexport default TabsMailView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabsMailView\");","map":{"version":3,"sources":["C:/Users/simon/Documents/GitHub/comi/src/components/Mail/TabsMailView.js"],"names":["React","useEffect","useState","SearchBar","Show","axios","require","default","TabsMailView","props","data","setData","fetch","setFetch","url","setUrl","projet","setprojet","show","setShow","ChangeURL","get","then","response","changeVariableProject","urlName","showMail","id","mailCreation","liste","message","push","title","content","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Show from \"./Show\";\r\nimport \"./TabsMailView.scss\";\r\nconst axios = require('axios').default;\r\n\r\n\r\n\r\nconst TabsMailView = (props) => {\r\n\r\n    \r\n  \r\n    const [data, setData] = useState ([])\r\n    const [fetch, setFetch] = useState (true)\r\n    const [url, setUrl] = useState ([\"unread\"])\r\n    const [projet, setprojet] = useState (false)\r\n    const [show, setShow] = useState (false)\r\n    let { ChangeURL } = props\r\n\r\n    useEffect(() => {\r\n      if (ChangeURL != url) {\r\n        setUrl(ChangeURL)\r\n        setFetch(true)\r\n      }\r\n     \r\n      if (fetch) {\r\n          axios.get(`http://localhost:3000/messages/${url}`).then(function (response) {\r\n          setData(response.data)\r\n          setFetch(false)\r\n        })\r\n      } \r\n\r\n    }, [data,ChangeURL,fetch, url, projet])\r\n\r\n\r\n    const changeVariableProject = (urlName) => {\r\n      setUrl(urlName)\r\n      setFetch(true)\r\n    } \r\n\r\n    const showMail = (id) => {\r\n      setShow(true)\r\n    } \r\n    \r\n    const mailCreation = () => {\r\n\r\n      const liste = []\r\n\r\n      if (url !== \"project\") {\r\n        for (const message of data) {\r\n          liste.push(\r\n          <div className=\"message\" onClick={() => showMail(message.title)}>\r\n            <input type=\"checkbox\" class=\"check\" />\r\n            <div class=\"sender-img\">\r\n              <div class=\"profil-img\"></div>\r\n              <div class=\"mail-notification\"></div>\r\n            </div>\r\n            <p class=\"mail-title\">{message.title}</p>\r\n            <p class=\"mail-content\">\r\n            {message.content}\r\n            </p>\r\n          </div>\r\n          )\r\n        }\r\n      }\r\n      else{\r\n        for (const projet of data) {\r\n          liste.push(\r\n          <div>\r\n            <p onClick={() => changeVariableProject(`unread/${projet.name}`)} class=\"mail-title\">{projet.name}</p>\r\n          </div>\r\n          )\r\n        }\r\n      }\r\n\r\n    return liste\r\n  };\r\n\r\n  return (\r\n    <div className=\"content-msgPage\">\r\n      <SearchBar />\r\n      <div className=\"content-message\">\r\n        <span>Date</span>\r\n        <div className=\"mail\">\r\n        {mailCreation()}\r\n        \r\n         {(() => {\r\n        if (show) {\r\n          return  <Show id = { show }></Show>;\r\n        } \r\n      })()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabsMailView;\r\n"]},"metadata":{},"sourceType":"module"}