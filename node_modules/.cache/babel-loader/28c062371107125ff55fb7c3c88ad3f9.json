{"ast":null,"code":"var _jsxFileName = \"G:\\\\Cour Sup\\\\PROJECT\\\\Project Transversale\\\\comi\\\\src\\\\components\\\\Mail\\\\TabsMailView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport Show from \"./Show\";\nimport \"./TabsMailView.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios').default;\n\nconst TabsMailView = props => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [fetch, setFetch] = useState(true);\n  const [url, setUrl] = useState([\"unread\"]);\n  const [show, setShow] = useState(false);\n  const [projet, setProjet] = useState([]);\n  const [change, setChange] = useState(false);\n  const [trigger, setTrigger] = useState(false);\n  let {\n    ChangeURL\n  } = props;\n  useEffect(() => {\n    if (ChangeURL != url) {\n      setUrl(ChangeURL);\n      setFetch(true);\n    }\n\n    if (fetch) {\n      axios.get(`http://localhost:3000/messages/${url}`, {\n        params: {\n          receveur: localStorage.getItem(\"id\")\n        }\n      }).then(function (response) {\n        setData(response.data);\n        setFetch(false);\n        setChange(false);\n      });\n    }\n  }, [data, ChangeURL, fetch, url, projet]);\n\n  const changeVariableProject = urlName => {\n    axios.get(`http://localhost:3000/messages/section/${urlName}`).then(function (response) {\n      setData(response.data);\n    });\n    setChange(true);\n  };\n\n  const showMail = id => {\n    setShow(id);\n    setTrigger(true);\n  };\n\n  const mailOfSection = () => {\n    const liste = [];\n\n    for (const message of data) {\n      console.log(message);\n      liste.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => showMail(message),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          class: \"check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"sender-img\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"profil-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"mail-notification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"mail-title\",\n          children: message.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"mail-content\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this));\n    }\n\n    return liste;\n  };\n\n  const allMail = () => {\n    const liste = [];\n\n    if (url !== \"project\") {\n      let crop = \"\";\n\n      for (const message of data) {\n        if (message.content != undefined) {\n          if (message.content.length > 100) {\n            crop = message.content.substr(0, 100) + \"...\";\n          } else {\n            crop = message.content;\n          }\n        }\n\n        liste.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          onClick: () => showMail(message),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            class: \"check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"sender-img\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"profil-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"mail-notification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"mail-title\",\n            children: message.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"mail-content\",\n              children: crop\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this));\n      }\n    } else {\n      for (const projet of data) {\n        liste.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: () => changeVariableProject(`${projet.name}`),\n            class: \"mail-title\",\n            children: projet.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this));\n      }\n    }\n\n    return liste;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-msgPage\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mail\",\n        children: [change == false ? allMail() : mailOfSection(), /*#__PURE__*/_jsxDEV(Show, {\n          trigger: trigger,\n          mail: show,\n          setTrigger: setTrigger\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 8\n        }, this), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TabsMailView, \"cqLj52jWNVFKXWMpy9S9u46OpDU=\");\n\n_c = TabsMailView;\nexport default TabsMailView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabsMailView\");","map":{"version":3,"sources":["G:/Cour Sup/PROJECT/Project Transversale/comi/src/components/Mail/TabsMailView.js"],"names":["React","useEffect","useState","SearchBar","Show","axios","require","default","TabsMailView","props","data","setData","fetch","setFetch","url","setUrl","show","setShow","projet","setProjet","change","setChange","trigger","setTrigger","ChangeURL","get","params","receveur","localStorage","getItem","then","response","changeVariableProject","urlName","showMail","id","mailOfSection","liste","message","console","log","push","title","content","allMail","crop","undefined","length","substr","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Show from \"./Show\";\r\nimport \"./TabsMailView.scss\";\r\nconst axios = require('axios').default;\r\n\r\n\r\n\r\nconst TabsMailView = (props) => {\r\n\r\n    \r\n  \r\n    const [data, setData] = useState ([])\r\n    const [fetch, setFetch] = useState (true)\r\n    const [url, setUrl] = useState ([\"unread\"])\r\n    const [show, setShow] = useState (false)\r\n    const [projet, setProjet] = useState ([])\r\n    const [change, setChange] = useState (false)\r\n    const [trigger, setTrigger] = useState (false)\r\n    let { ChangeURL } = props\r\n\r\n    useEffect(() => {\r\n      if (ChangeURL != url) {\r\n        setUrl(ChangeURL)\r\n        setFetch(true)\r\n      }\r\n     \r\n      if (fetch) {\r\n\r\n          axios.get(`http://localhost:3000/messages/${url}`, {\r\n            params: {\r\n              receveur: localStorage.getItem(\"id\")\r\n            }\r\n          }).then(function (response) {\r\n          setData(response.data)\r\n          setFetch(false)\r\n          setChange(false)\r\n        })\r\n      } \r\n    }, [data,ChangeURL,fetch, url, projet])\r\n\r\n\r\n    const changeVariableProject = (urlName) => {\r\n      axios.get(`http://localhost:3000/messages/section/${urlName}`).then(function (response) {\r\n        setData(response.data)\r\n      })  \r\n      setChange(true)\r\n    } \r\n\r\n    const showMail = (id) => {\r\n      setShow(id)\r\n      setTrigger(true)\r\n    } \r\n    \r\n    const mailOfSection = () => {\r\n      const liste = []\r\n\r\n      for (const message of data) {\r\n        console.log(message)\r\n        liste.push(\r\n        <div onClick={() => showMail(message)}>\r\n          <input type=\"checkbox\" class=\"check\" />\r\n          <div class=\"sender-img\">\r\n            <div class=\"profil-img\"></div>\r\n            <div class=\"mail-notification\"></div>\r\n          </div>\r\n          <p class=\"mail-title\">{message.title}</p>\r\n          <p class=\"mail-content\">{message.content}\r\n          </p>\r\n        </div>\r\n        )\r\n      }\r\n\r\n    return liste\r\n    }\r\n\r\n\r\n    const allMail = () => {\r\n\r\n      const liste = []\r\n\r\n      if (url !== \"project\") {\r\n        let crop = \"\"\r\n        for (const message of data) {\r\n          if (message.content != undefined) {\r\n            if (message.content.length > 100) {\r\n              crop = message.content.substr(0, 100)+\"...\"\r\n            }\r\n            else{\r\n              crop = message.content\r\n            }\r\n          }\r\n        \r\n          \r\n          liste.push(\r\n          <div className=\"message\" onClick={() => showMail(message)}>\r\n            <input type=\"checkbox\" class=\"check\" />\r\n            <div class=\"sender-img\">\r\n              <div class=\"profil-img\"></div>\r\n              <div class=\"mail-notification\"></div>\r\n            </div>\r\n            <p class=\"mail-title\">{message.title}</p>\r\n            <div><p class=\"mail-content\">{crop}</p></div>\r\n            \r\n          </div>\r\n          )\r\n        }\r\n      }\r\n      else{\r\n        for (const projet of data) {\r\n          liste.push(\r\n          <div>\r\n            <p onClick={() => changeVariableProject(`${projet.name}`)} class=\"mail-title\">{projet.name}</p>\r\n          </div>\r\n          \r\n          )\r\n        }\r\n      }\r\n\r\n    return liste\r\n  };\r\n\r\n  return (\r\n    <div className=\"content-msgPage\">\r\n      <SearchBar />\r\n      <div className=\"content-message\">\r\n        <span>Date</span>\r\n        <div className=\"mail\">\r\n\r\n        {change == false ? allMail() : mailOfSection() }\r\n      \r\n        \r\n       \r\n       <Show trigger={trigger} mail = { show } setTrigger= {setTrigger}>\r\n          \r\n        </Show>;\r\n \r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabsMailView;\r\n"]},"metadata":{},"sourceType":"module"}