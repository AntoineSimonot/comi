{"ast":null,"code":"/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\n})(this, function () {\n  'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var defaults$5 = {\n    exports: {}\n  };\n\n  function getDefaults$1() {\n    return {\n      baseUrl: null,\n      breaks: false,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n\n  function changeDefaults$1(newDefaults) {\n    defaults$5.exports.defaults = newDefaults;\n  }\n\n  defaults$5.exports = {\n    defaults: getDefaults$1(),\n    getDefaults: getDefaults$1,\n    changeDefaults: changeDefaults$1\n  };\n  /**\n   * Helpers\n   */\n\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape$2(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape$1(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit$1(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl$1(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape$1(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim$1(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest$1 = {\n    exec: function noopTest() {}\n  };\n\n  function merge$2(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells$1(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim$1(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket$1(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation$1(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n\n  function repeatString$1(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  var helpers = {\n    escape: escape$2,\n    unescape: unescape$1,\n    edit: edit$1,\n    cleanUrl: cleanUrl$1,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest$1,\n    merge: merge$2,\n    splitCells: splitCells$1,\n    rtrim: rtrim$1,\n    findClosingBracket: findClosingBracket$1,\n    checkSanitizeDeprecation: checkSanitizeDeprecation$1,\n    repeatString: repeatString$1\n  };\n  var defaults$4 = defaults$5.exports.defaults;\n  var rtrim = helpers.rtrim,\n      splitCells = helpers.splitCells,\n      _escape = helpers.escape,\n      findClosingBracket = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$4;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text\n        };\n      }\n    };\n\n    _proto.nptable = function nptable(src) {\n      var cap = this.rules.block.nptable.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n          raw: cap[0]\n        };\n\n        if (item.header.length === item.align.length) {\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var bull = cap[2];\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: raw,\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        }; // Get each top-level item.\n\n        var itemMatch = cap[0].match(this.rules.block.item);\n        var next = false,\n            item,\n            space,\n            bcurr,\n            bnext,\n            addBack,\n            loose,\n            istask,\n            ischecked,\n            endMatch;\n        var l = itemMatch.length;\n        bcurr = this.rules.block.listItemStart.exec(itemMatch[0]);\n\n        for (var i = 0; i < l; i++) {\n          item = itemMatch[i];\n          raw = item;\n\n          if (!this.options.pedantic) {\n            // Determine if current item contains the end of the list\n            endMatch = item.match(new RegExp('\\\\n\\\\s*\\\\n {0,' + (bcurr[0].length - 1) + '}\\\\S'));\n\n            if (endMatch) {\n              addBack = item.length - endMatch.index + itemMatch.slice(i + 1).join('\\n').length;\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\n              item = item.substring(0, endMatch.index);\n              raw = item;\n              l = i + 1;\n            }\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n\n          if (i !== l - 1) {\n            bnext = this.rules.block.listItemStart.exec(itemMatch[i + 1]);\n\n            if (!this.options.pedantic ? bnext[1].length >= bcurr[0].length || bnext[1].length > 3 : bnext[1].length > bcurr[1].length) {\n              // nested list or continuation\n              itemMatch.splice(i, 2, itemMatch[i] + (!this.options.pedantic && bnext[1].length < bcurr[0].length && !itemMatch[i].match(/\\n$/) ? '' : '\\n') + itemMatch[i + 1]);\n              i--;\n              l--;\n              continue;\n            } else if ( // different bullet style\n            !this.options.pedantic || this.options.smartLists ? bnext[2][bnext[2].length - 1] !== bull[bull.length - 1] : isordered === (bnext[2].length === 1)) {\n              addBack = itemMatch.slice(i + 1).join('\\n').length;\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\n              i = l - 1;\n            }\n\n            bcurr = bnext;\n          } // Remove the list item's bullet\n          // so it is seen as the next token.\n\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+[.)]) ?/, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // trim item newlines at end\n\n\n          item = rtrim(item, '\\n');\n\n          if (i !== l - 1) {\n            raw = raw + '\\n';\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(raw);\n\n          if (i !== l - 1) {\n            next = raw.slice(-2) === '\\n\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            list.loose = true;\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.test(item);\n            ischecked = undefined;\n\n            if (istask) {\n              ischecked = item[1] !== ' ';\n              item = item.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: istask,\n            checked: ischecked,\n            loose: loose,\n            text: item\n          });\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        return {\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        };\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src, inLink, inRawBlock) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!inLink && /^<a /i.test(cap[0])) {\n          inLink = true;\n        } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n          inLink = false;\n        }\n\n        if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = true;\n        } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: inLink,\n          inRawBlock: inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0]);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0]);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return;\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0;\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength); // Bump maskedSrc to same section of string as src (move to lexer?)\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // matched the first alternative in rules.js (skip the * in __abc*abc__)\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // If this is the last rDelimiter, remove extra characters. *a*** -> *a*\n\n          if (delimTotal + midDelimTotal - rLength <= 0 && !maskedSrc.slice(endReg.lastIndex).match(endReg)) {\n            rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n          }\n\n          if (Math.min(lLength, rLength) % 2) {\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(1, lLength + match.index + rLength)\n            };\n          }\n\n          if (Math.min(lLength, rLength) % 2 === 0) {\n            return {\n              type: 'strong',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(2, lLength + match.index + rLength - 1)\n            };\n          }\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2]\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, inRawBlock, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest = helpers.noopTest,\n      edit = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block$1 = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?! {0,3}bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block$1._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block$1._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block$1.def = edit(block$1.def).replace('label', block$1._label).replace('title', block$1._title).getRegex();\n  block$1.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block$1.item = /^( *)(bull) ?[^\\n]*(?:\\n(?! *bull ?)[^\\n]*)*/;\n  block$1.item = edit(block$1.item, 'gm').replace(/bull/g, block$1.bullet).getRegex();\n  block$1.listItemStart = edit(/^( *)(bull) */).replace('bull', block$1.bullet).getRegex();\n  block$1.list = edit(block$1.list).replace(/bull/g, block$1.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block$1.def.source + ')').getRegex();\n  block$1._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block$1._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block$1.html = edit(block$1.html, 'i').replace('comment', block$1._comment).replace('tag', block$1._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block$1.paragraph = edit(block$1._paragraph).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block$1._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block$1.blockquote = edit(block$1.blockquote).replace('paragraph', block$1.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block$1.normal = merge$1({}, block$1);\n  /**\n   * GFM Block Grammar\n   */\n\n  block$1.gfm = merge$1({}, block$1.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' {0,3}\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block$1.gfm.nptable = edit(block$1.gfm.nptable).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block$1.gfm.table = edit(block$1.gfm.table).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block$1.pedantic = merge$1({}, block$1.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block$1._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block$1.normal._paragraph).replace('hr', block$1.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block$1.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline$1 = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip other delimiter (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /\\_\\_[^_]*?\\*[^_]*?\\_\\_|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /\\*\\*[^*]*?\\_[^*]*?\\*\\*|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline$1._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline$1.punctuation = edit(inline$1.punctuation).replace(/punctuation/g, inline$1._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline$1.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline$1.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline$1._comment = edit(block$1._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline$1.emStrong.lDelim = edit(inline$1.emStrong.lDelim).replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimAst = edit(inline$1.emStrong.rDelimAst, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimUnd = edit(inline$1.emStrong.rDelimUnd, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline$1._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline$1._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline$1.autolink = edit(inline$1.autolink).replace('scheme', inline$1._scheme).replace('email', inline$1._email).getRegex();\n  inline$1._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline$1.tag = edit(inline$1.tag).replace('comment', inline$1._comment).replace('attribute', inline$1._attribute).getRegex();\n  inline$1._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline$1._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline$1._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline$1.link = edit(inline$1.link).replace('label', inline$1._label).replace('href', inline$1._href).replace('title', inline$1._title).getRegex();\n  inline$1.reflink = edit(inline$1.reflink).replace('label', inline$1._label).getRegex();\n  inline$1.reflinkSearch = edit(inline$1.reflinkSearch, 'g').replace('reflink', inline$1.reflink).replace('nolink', inline$1.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline$1.normal = merge$1({}, inline$1);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline$1.pedantic = merge$1({}, inline$1.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline$1._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline$1._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline$1.gfm = merge$1({}, inline$1.normal, {\n    escape: edit(inline$1.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline$1.gfm.url = edit(inline$1.gfm.url, 'i').replace('email', inline$1.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline$1.breaks = merge$1({}, inline$1.gfm, {\n    br: edit(inline$1.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline$1.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block$1,\n    inline: inline$1\n  };\n  var Tokenizer$1 = Tokenizer_1;\n  var defaults$3 = defaults$5.exports.defaults;\n  var block = rules.block,\n      inline = rules.inline;\n  var repeatString = helpers.repeatString;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$3;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer$1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n    /**\n     * Static Lex Method\n     */\n\n\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens, true);\n      this.inline(this.tokens);\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens, top) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (top === void 0) {\n        top = true;\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n\n      var token, i, l, lastToken;\n\n      while (src) {\n        // newline\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // table no leading pipe (gfm)\n\n\n        if (token = this.tokenizer.nptable(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.blockTokens(token.text, [], top);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          l = token.items.length;\n\n          for (i = 0; i < l; i++) {\n            token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n          }\n\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (top && (token = this.tokenizer.def(src))) {\n          src = src.substring(token.raw.length);\n\n          if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n\n\n        if (top && (token = this.tokenizer.paragraph(src))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _proto.inline = function inline(tokens) {\n      var i, j, k, l2, row, token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'paragraph':\n          case 'text':\n          case 'heading':\n            {\n              token.tokens = [];\n              this.inlineTokens(token.text, token.tokens);\n              break;\n            }\n\n          case 'table':\n            {\n              token.tokens = {\n                header: [],\n                cells: []\n              }; // header\n\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                token.tokens.header[j] = [];\n                this.inlineTokens(token.header[j], token.tokens.header[j]);\n              } // cells\n\n\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.cells[j];\n                token.tokens.cells[j] = [];\n\n                for (k = 0; k < row.length; k++) {\n                  token.tokens.cells[j][k] = [];\n                  this.inlineTokens(row[k], token.tokens.cells[j][k]);\n                }\n              }\n\n              break;\n            }\n\n          case 'blockquote':\n            {\n              this.inline(token.tokens);\n              break;\n            }\n\n          case 'list':\n            {\n              l2 = token.items.length;\n\n              for (j = 0; j < l2; j++) {\n                this.inline(token.items[j].tokens);\n              }\n\n              break;\n            }\n        }\n      }\n\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens, inLink, inRawBlock) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (inLink === void 0) {\n        inLink = false;\n      }\n\n      if (inRawBlock === void 0) {\n        inRawBlock = false;\n      }\n\n      var token, lastToken; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // escape\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n          src = src.substring(token.raw.length);\n          inLink = token.inLink;\n          inRawBlock = token.inRawBlock;\n          var _lastToken = tokens[tokens.length - 1];\n\n          if (_lastToken && token.type === 'text' && _lastToken.type === 'text') {\n            _lastToken.raw += token.raw;\n            _lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          var _lastToken2 = tokens[tokens.length - 1];\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n            tokens.push(token);\n          } else if (_lastToken2 && token.type === 'text' && _lastToken2.type === 'text') {\n            _lastToken2.raw += token.raw;\n            _lastToken2.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.inlineText(src, inRawBlock, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$2 = defaults$5.exports.defaults;\n  var cleanUrl = helpers.cleanUrl,\n      escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$2;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype; // no need for block level renderers\n\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n  /**\n   * Slugger generates header id\n   */\n\n\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  var Renderer$1 = Renderer_1;\n  var TextRenderer$1 = TextRenderer_1;\n  var Slugger$1 = Slugger_1;\n  var defaults$1 = defaults$5.exports.defaults;\n  var unescape = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$1;\n      this.options.renderer = this.options.renderer || new Renderer$1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer$1();\n      this.slugger = new Slugger$1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.tokens.header[j]), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.tokens.cells[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k]), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var Lexer = Lexer_1;\n  var Parser = Parser_1;\n  var Tokenizer = Tokenizer_1;\n  var Renderer = Renderer_1;\n  var TextRenderer = TextRenderer_1;\n  var Slugger = Slugger_1;\n  var merge = helpers.merge,\n      checkSanitizeDeprecation = helpers.checkSanitizeDeprecation,\n      escape = helpers.escape;\n  var getDefaults = defaults$5.exports.getDefaults,\n      changeDefaults = defaults$5.exports.changeDefaults,\n      defaults = defaults$5.exports.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function (extension) {\n    var opts = merge({}, extension);\n\n    if (extension.renderer) {\n      (function () {\n        var renderer = marked.defaults.renderer || new Renderer();\n\n        var _loop = function _loop(prop) {\n          var prevRenderer = renderer[prop];\n\n          renderer[prop] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            var ret = extension.renderer[prop].apply(renderer, args);\n\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.renderer) {\n          _loop(prop);\n        }\n\n        opts.renderer = renderer;\n      })();\n    }\n\n    if (extension.tokenizer) {\n      (function () {\n        var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n        var _loop2 = function _loop2(prop) {\n          var prevTokenizer = tokenizer[prop];\n\n          tokenizer[prop] = function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            var ret = extension.tokenizer[prop].apply(tokenizer, args);\n\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.tokenizer) {\n          _loop2(prop);\n        }\n\n        opts.tokenizer = tokenizer;\n      })();\n    }\n\n    if (extension.walkTokens) {\n      var walkTokens = marked.defaults.walkTokens;\n\n      opts.walkTokens = function (token) {\n        extension.walkTokens(token);\n\n        if (walkTokens) {\n          walkTokens(token);\n        }\n      };\n    }\n\n    marked.setOptions(opts);\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.tokens.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.tokens.cells), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var marked_1 = marked;\n  return marked_1;\n});","map":{"version":3,"sources":["G:/Cour Sup/PROJECT/Project Transversale/comi/node_modules/marked/lib/marked.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","marked","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_unsupportedIterableToArray","o","minLen","_arrayLikeToArray","n","toString","call","slice","constructor","name","Array","from","test","arr","len","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","next","bind","isArray","done","value","TypeError","defaults$5","getDefaults$1","baseUrl","breaks","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","changeDefaults$1","newDefaults","defaults","getDefaults","changeDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape$2","html","encode","replace","unescapeTest","unescape$1","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit$1","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl$1","base","href","prot","decodeURIComponent","e","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim$1","relativeBase","noopTest$1","exec","noopTest","merge$2","arguments","hasOwnProperty","splitCells$1","tableRow","count","row","match","offset","str","escaped","curr","cells","split","splice","push","trim","c","invert","l","suffLen","currChar","substr","findClosingBracket$1","b","level","checkSanitizeDeprecation$1","console","warn","repeatString$1","pattern","result","helpers","escape","unescape","edit","cleanUrl","merge","splitCells","rtrim","findClosingBracket","checkSanitizeDeprecation","repeatString","defaults$4","_escape","outputLink","cap","link","raw","title","text","type","indentCodeCompensation","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","Tokenizer_1","Tokenizer","options","_proto","space","src","rules","block","newline","code","codeBlockStyle","fences","lang","heading","trimmed","depth","nptable","item","header","align","hr","blockquote","list","bull","isordered","ordered","start","loose","items","itemMatch","bcurr","bnext","addBack","istask","ischecked","endMatch","listItemStart","index","undefined","task","checked","pre","def","tag","table","lheading","paragraph","inline","inLink","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","Math","min","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","tokens","url","prevCapZero","_backpedal","inlineText","merge$1","block$1","_paragraph","_label","_title","bullet","_tag","_comment","normal","inline$1","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Tokenizer$1","defaults$3","out","charCodeAt","random","Lexer_1","Lexer","create","lex","lexer","lexInline","inlineTokens","blockTokens","top","token","lastToken","errMsg","error","Error","j","k","l2","keepPrevChar","keys","includes","lastIndexOf","_lastToken","_lastToken2","get","defaults$2","escape$1","Renderer_1","Renderer","_code","infostring","quote","_html","slugger","slug","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","image","_text","TextRenderer_1","TextRenderer","Slugger_1","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Renderer$1","TextRenderer$1","Slugger$1","defaults$1","Parser_1","Parser","textRenderer","parse","parser","parseInline","l3","cell","itemBody","unshift","callback","err","pending","setTimeout","_tokens","message","setOptions","use","extension","opts","_loop","prop","prevRenderer","_len","args","_key","ret","apply","_loop2","prevTokenizer","_len2","_key2","_iterator","_step","_iterator2","_step2","_iterator3","_step3","_iterator4","_step4","_cell","marked_1"],"mappings":"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","sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var defaults$5 = {exports: {}};\n\n  function getDefaults$1() {\n    return {\n      baseUrl: null,\n      breaks: false,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n\n  function changeDefaults$1(newDefaults) {\n    defaults$5.exports.defaults = newDefaults;\n  }\n\n  defaults$5.exports = {\n    defaults: getDefaults$1(),\n    getDefaults: getDefaults$1,\n    changeDefaults: changeDefaults$1\n  };\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape$2(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape$1(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit$1(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl$1(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape$1(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim$1(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest$1 = {\n    exec: function noopTest() {}\n  };\n\n  function merge$2(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells$1(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim$1(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket$1(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation$1(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n\n  function repeatString$1(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  var helpers = {\n    escape: escape$2,\n    unescape: unescape$1,\n    edit: edit$1,\n    cleanUrl: cleanUrl$1,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest$1,\n    merge: merge$2,\n    splitCells: splitCells$1,\n    rtrim: rtrim$1,\n    findClosingBracket: findClosingBracket$1,\n    checkSanitizeDeprecation: checkSanitizeDeprecation$1,\n    repeatString: repeatString$1\n  };\n\n  var defaults$4 = defaults$5.exports.defaults;\n  var rtrim = helpers.rtrim,\n      splitCells = helpers.splitCells,\n      _escape = helpers.escape,\n      findClosingBracket = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$4;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text\n        };\n      }\n    };\n\n    _proto.nptable = function nptable(src) {\n      var cap = this.rules.block.nptable.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n          raw: cap[0]\n        };\n\n        if (item.header.length === item.align.length) {\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var bull = cap[2];\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: raw,\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        }; // Get each top-level item.\n\n        var itemMatch = cap[0].match(this.rules.block.item);\n        var next = false,\n            item,\n            space,\n            bcurr,\n            bnext,\n            addBack,\n            loose,\n            istask,\n            ischecked,\n            endMatch;\n        var l = itemMatch.length;\n        bcurr = this.rules.block.listItemStart.exec(itemMatch[0]);\n\n        for (var i = 0; i < l; i++) {\n          item = itemMatch[i];\n          raw = item;\n\n          if (!this.options.pedantic) {\n            // Determine if current item contains the end of the list\n            endMatch = item.match(new RegExp('\\\\n\\\\s*\\\\n {0,' + (bcurr[0].length - 1) + '}\\\\S'));\n\n            if (endMatch) {\n              addBack = item.length - endMatch.index + itemMatch.slice(i + 1).join('\\n').length;\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\n              item = item.substring(0, endMatch.index);\n              raw = item;\n              l = i + 1;\n            }\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n\n          if (i !== l - 1) {\n            bnext = this.rules.block.listItemStart.exec(itemMatch[i + 1]);\n\n            if (!this.options.pedantic ? bnext[1].length >= bcurr[0].length || bnext[1].length > 3 : bnext[1].length > bcurr[1].length) {\n              // nested list or continuation\n              itemMatch.splice(i, 2, itemMatch[i] + (!this.options.pedantic && bnext[1].length < bcurr[0].length && !itemMatch[i].match(/\\n$/) ? '' : '\\n') + itemMatch[i + 1]);\n              i--;\n              l--;\n              continue;\n            } else if ( // different bullet style\n            !this.options.pedantic || this.options.smartLists ? bnext[2][bnext[2].length - 1] !== bull[bull.length - 1] : isordered === (bnext[2].length === 1)) {\n              addBack = itemMatch.slice(i + 1).join('\\n').length;\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\n              i = l - 1;\n            }\n\n            bcurr = bnext;\n          } // Remove the list item's bullet\n          // so it is seen as the next token.\n\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+[.)]) ?/, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // trim item newlines at end\n\n\n          item = rtrim(item, '\\n');\n\n          if (i !== l - 1) {\n            raw = raw + '\\n';\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(raw);\n\n          if (i !== l - 1) {\n            next = raw.slice(-2) === '\\n\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            list.loose = true;\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.test(item);\n            ischecked = undefined;\n\n            if (istask) {\n              ischecked = item[1] !== ' ';\n              item = item.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: istask,\n            checked: ischecked,\n            loose: loose,\n            text: item\n          });\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        return {\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        };\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src, inLink, inRawBlock) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!inLink && /^<a /i.test(cap[0])) {\n          inLink = true;\n        } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n          inLink = false;\n        }\n\n        if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = true;\n        } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: inLink,\n          inRawBlock: inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0]);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0]);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return;\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0;\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength); // Bump maskedSrc to same section of string as src (move to lexer?)\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // matched the first alternative in rules.js (skip the * in __abc*abc__)\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // If this is the last rDelimiter, remove extra characters. *a*** -> *a*\n\n          if (delimTotal + midDelimTotal - rLength <= 0 && !maskedSrc.slice(endReg.lastIndex).match(endReg)) {\n            rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n          }\n\n          if (Math.min(lLength, rLength) % 2) {\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(1, lLength + match.index + rLength)\n            };\n          }\n\n          if (Math.min(lLength, rLength) % 2 === 0) {\n            return {\n              type: 'strong',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(2, lLength + match.index + rLength - 1)\n            };\n          }\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2]\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, inRawBlock, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest = helpers.noopTest,\n      edit = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block$1 = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?! {0,3}bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block$1._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block$1._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block$1.def = edit(block$1.def).replace('label', block$1._label).replace('title', block$1._title).getRegex();\n  block$1.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block$1.item = /^( *)(bull) ?[^\\n]*(?:\\n(?! *bull ?)[^\\n]*)*/;\n  block$1.item = edit(block$1.item, 'gm').replace(/bull/g, block$1.bullet).getRegex();\n  block$1.listItemStart = edit(/^( *)(bull) */).replace('bull', block$1.bullet).getRegex();\n  block$1.list = edit(block$1.list).replace(/bull/g, block$1.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block$1.def.source + ')').getRegex();\n  block$1._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block$1._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block$1.html = edit(block$1.html, 'i').replace('comment', block$1._comment).replace('tag', block$1._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block$1.paragraph = edit(block$1._paragraph).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block$1._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block$1.blockquote = edit(block$1.blockquote).replace('paragraph', block$1.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block$1.normal = merge$1({}, block$1);\n  /**\n   * GFM Block Grammar\n   */\n\n  block$1.gfm = merge$1({}, block$1.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' {0,3}\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block$1.gfm.nptable = edit(block$1.gfm.nptable).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block$1.gfm.table = edit(block$1.gfm.table).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block$1.pedantic = merge$1({}, block$1.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block$1._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block$1.normal._paragraph).replace('hr', block$1.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block$1.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline$1 = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip other delimiter (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /\\_\\_[^_]*?\\*[^_]*?\\_\\_|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /\\*\\*[^*]*?\\_[^*]*?\\*\\*|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline$1._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline$1.punctuation = edit(inline$1.punctuation).replace(/punctuation/g, inline$1._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline$1.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline$1.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline$1._comment = edit(block$1._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline$1.emStrong.lDelim = edit(inline$1.emStrong.lDelim).replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimAst = edit(inline$1.emStrong.rDelimAst, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimUnd = edit(inline$1.emStrong.rDelimUnd, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline$1._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline$1._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline$1.autolink = edit(inline$1.autolink).replace('scheme', inline$1._scheme).replace('email', inline$1._email).getRegex();\n  inline$1._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline$1.tag = edit(inline$1.tag).replace('comment', inline$1._comment).replace('attribute', inline$1._attribute).getRegex();\n  inline$1._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline$1._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline$1._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline$1.link = edit(inline$1.link).replace('label', inline$1._label).replace('href', inline$1._href).replace('title', inline$1._title).getRegex();\n  inline$1.reflink = edit(inline$1.reflink).replace('label', inline$1._label).getRegex();\n  inline$1.reflinkSearch = edit(inline$1.reflinkSearch, 'g').replace('reflink', inline$1.reflink).replace('nolink', inline$1.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline$1.normal = merge$1({}, inline$1);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline$1.pedantic = merge$1({}, inline$1.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline$1._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline$1._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline$1.gfm = merge$1({}, inline$1.normal, {\n    escape: edit(inline$1.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline$1.gfm.url = edit(inline$1.gfm.url, 'i').replace('email', inline$1.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline$1.breaks = merge$1({}, inline$1.gfm, {\n    br: edit(inline$1.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline$1.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block$1,\n    inline: inline$1\n  };\n\n  var Tokenizer$1 = Tokenizer_1;\n  var defaults$3 = defaults$5.exports.defaults;\n  var block = rules.block,\n      inline = rules.inline;\n  var repeatString = helpers.repeatString;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$3;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer$1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens, true);\n      this.inline(this.tokens);\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens, top) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (top === void 0) {\n        top = true;\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n\n      var token, i, l, lastToken;\n\n      while (src) {\n        // newline\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // table no leading pipe (gfm)\n\n\n        if (token = this.tokenizer.nptable(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.blockTokens(token.text, [], top);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          l = token.items.length;\n\n          for (i = 0; i < l; i++) {\n            token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n          }\n\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (top && (token = this.tokenizer.def(src))) {\n          src = src.substring(token.raw.length);\n\n          if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n\n\n        if (top && (token = this.tokenizer.paragraph(src))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _proto.inline = function inline(tokens) {\n      var i, j, k, l2, row, token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'paragraph':\n          case 'text':\n          case 'heading':\n            {\n              token.tokens = [];\n              this.inlineTokens(token.text, token.tokens);\n              break;\n            }\n\n          case 'table':\n            {\n              token.tokens = {\n                header: [],\n                cells: []\n              }; // header\n\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                token.tokens.header[j] = [];\n                this.inlineTokens(token.header[j], token.tokens.header[j]);\n              } // cells\n\n\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.cells[j];\n                token.tokens.cells[j] = [];\n\n                for (k = 0; k < row.length; k++) {\n                  token.tokens.cells[j][k] = [];\n                  this.inlineTokens(row[k], token.tokens.cells[j][k]);\n                }\n              }\n\n              break;\n            }\n\n          case 'blockquote':\n            {\n              this.inline(token.tokens);\n              break;\n            }\n\n          case 'list':\n            {\n              l2 = token.items.length;\n\n              for (j = 0; j < l2; j++) {\n                this.inline(token.items[j].tokens);\n              }\n\n              break;\n            }\n        }\n      }\n\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens, inLink, inRawBlock) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (inLink === void 0) {\n        inLink = false;\n      }\n\n      if (inRawBlock === void 0) {\n        inRawBlock = false;\n      }\n\n      var token, lastToken; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // escape\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n          src = src.substring(token.raw.length);\n          inLink = token.inLink;\n          inRawBlock = token.inRawBlock;\n          var _lastToken = tokens[tokens.length - 1];\n\n          if (_lastToken && token.type === 'text' && _lastToken.type === 'text') {\n            _lastToken.raw += token.raw;\n            _lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          var _lastToken2 = tokens[tokens.length - 1];\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n            tokens.push(token);\n          } else if (_lastToken2 && token.type === 'text' && _lastToken2.type === 'text') {\n            _lastToken2.raw += token.raw;\n            _lastToken2.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.inlineText(src, inRawBlock, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$2 = defaults$5.exports.defaults;\n  var cleanUrl = helpers.cleanUrl,\n      escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$2;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  var Renderer$1 = Renderer_1;\n  var TextRenderer$1 = TextRenderer_1;\n  var Slugger$1 = Slugger_1;\n  var defaults$1 = defaults$5.exports.defaults;\n  var unescape = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$1;\n      this.options.renderer = this.options.renderer || new Renderer$1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer$1();\n      this.slugger = new Slugger$1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.tokens.header[j]), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.tokens.cells[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k]), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var Lexer = Lexer_1;\n  var Parser = Parser_1;\n  var Tokenizer = Tokenizer_1;\n  var Renderer = Renderer_1;\n  var TextRenderer = TextRenderer_1;\n  var Slugger = Slugger_1;\n  var merge = helpers.merge,\n      checkSanitizeDeprecation = helpers.checkSanitizeDeprecation,\n      escape = helpers.escape;\n  var getDefaults = defaults$5.exports.getDefaults,\n      changeDefaults = defaults$5.exports.changeDefaults,\n      defaults = defaults$5.exports.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function (extension) {\n    var opts = merge({}, extension);\n\n    if (extension.renderer) {\n      (function () {\n        var renderer = marked.defaults.renderer || new Renderer();\n\n        var _loop = function _loop(prop) {\n          var prevRenderer = renderer[prop];\n\n          renderer[prop] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            var ret = extension.renderer[prop].apply(renderer, args);\n\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.renderer) {\n          _loop(prop);\n        }\n\n        opts.renderer = renderer;\n      })();\n    }\n\n    if (extension.tokenizer) {\n      (function () {\n        var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n        var _loop2 = function _loop2(prop) {\n          var prevTokenizer = tokenizer[prop];\n\n          tokenizer[prop] = function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            var ret = extension.tokenizer[prop].apply(tokenizer, args);\n\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.tokenizer) {\n          _loop2(prop);\n        }\n\n        opts.tokenizer = tokenizer;\n      })();\n    }\n\n    if (extension.walkTokens) {\n      var walkTokens = marked.defaults.walkTokens;\n\n      opts.walkTokens = function (token) {\n        extension.walkTokens(token);\n\n        if (walkTokens) {\n          walkTokens(token);\n        }\n      };\n    }\n\n    marked.setOptions(opts);\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.tokens.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.tokens.cells), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var marked_1 = marked;\n\n  return marked_1;\n\n})));\n"]},"metadata":{},"sourceType":"script"}