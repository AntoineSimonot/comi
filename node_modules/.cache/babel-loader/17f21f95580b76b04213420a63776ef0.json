{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simon\\\\Documents\\\\GitHub\\\\comi\\\\src\\\\pages\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Auth from '../services/Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios').default;\n\nconst Login = () => {\n  _s();\n\n  let history = useHistory();\n  let location = useLocation();\n  let {\n    from\n  } = location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  }; // La fonction en dessous est juste un test pour faire une fake auth\n  // let login = () => {\n  //     Auth.signin(() => {\n  //     history.replace(from);\n  //     });\n  // };\n\n  let login = () => {\n    axios.get(`http://localhost:3000/user?email=simonotantoine1@gmail.com&password=0208200ASs`).then(function (response) {\n      console.log(response.data);\n    });\n  }; // cree une fonction qui fetch ton api pour te log, au clique envoie les donne de ton form vers ton api\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Country:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"country\",\n        value: country,\n        onChange: e => setCountry(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {}, \"\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: country\n        }, country, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"acceptedTerms\",\n        type: \"checkbox\",\n        onChange: e => setAcceptedTerms(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), \"I accept the terms of service\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/simon/Documents/GitHub/comi/src/pages/Login.js"],"names":["React","useHistory","useLocation","Auth","axios","require","default","Login","history","location","from","state","pathname","login","get","then","response","console","log","data","handleSubmit","email","e","setEmail","target","value","password","setPassword","country","setCountry","countries","map","setAcceptedTerms"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACIC,UADJ,EAEIC,WAFJ,QAGS,kBAHT;AAIA,OAAOC,IAAP,MAAiB,kBAAjB;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,MAAIC,OAAO,GAAGP,UAAU,EAAxB;AACA,MAAIQ,QAAQ,GAAGP,WAAW,EAA1B;AAEA,MAAI;AAAEQ,IAAAA;AAAF,MAAWD,QAAQ,CAACE,KAAT,IAAkB;AAAED,IAAAA,IAAI,EAAE;AAAEE,MAAAA,QAAQ,EAAE;AAAZ;AAAR,GAAjC,CAJgB,CAMhB;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,KAAK,GAAG,MAAM;AACdT,IAAAA,KAAK,CAACU,GAAN,CAAW,gFAAX,EAA4FC,IAA5F,CAAiG,UAAUC,QAAV,EAAoB;AACnHC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACD,KAFD;AAGH,GAJD,CAbgB,CAkBpB;;;AAEI,sBACI;AAAM,IAAA,QAAQ,EAAEC,YAAhB;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAGA;AAAA,wCAEE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,KAAK,EAAEC,KAHT;AAIE,QAAA,QAAQ,EAAEC,CAAC,IAAIC,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAJzB;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,eAaA;AAAA,2CAEE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAEC,QAHT;AAIE,QAAA,QAAQ,EAAEJ,CAAC,IAAIK,WAAW,CAACL,CAAC,CAACE,MAAF,CAASC,KAAV,CAJ5B;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbA,eAuBA;AAAA,0CAEE;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,KAAK,EAAEG,OAFT;AAGE,QAAA,QAAQ,EAAEN,CAAC,IAAIO,UAAU,CAACP,CAAC,CAACE,MAAF,CAASC,KAAV,CAH3B;AAIE,QAAA,QAAQ,MAJV;AAAA,gCAKE,sBAAY,EAAZ;AAAA;AAAA;AAAA;AAAA,gBALF,EAMGK,SAAS,CAACC,GAAV,CAAcH,OAAO,iBACpB;AAAA,oBAAuBA;AAAvB,WAAaA,OAAb;AAAA;AAAA;AAAA;AAAA,gBADD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBA,eAqCA;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,eADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,QAAQ,EAAEN,CAAC,IAAIU,gBAAgB,CAACV,CAAC,CAACE,MAAF,CAASC,KAAV,CAHjC;AAIE,QAAA,QAAQ;AAJV;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YArCA,eA8CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9CA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkDH,CAtED;;GAAMlB,K;UACYN,U,EACCC,W;;;KAFbK,K;AAwEN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\n\r\nimport {\r\n    useHistory,\r\n    useLocation\r\n  } from \"react-router-dom\";\r\nimport Auth from '../services/Auth';\r\nconst axios = require('axios').default;\r\n\r\nconst Login = () => {\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n\r\n    let { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n    // La fonction en dessous est juste un test pour faire une fake auth\r\n    // let login = () => {\r\n    //     Auth.signin(() => {\r\n    //     history.replace(from);\r\n    //     });\r\n    // };\r\n    \r\n    let login = () => {\r\n        axios.get(`http://localhost:3000/user?email=simonotantoine1@gmail.com&password=0208200ASs`).then(function (response) {\r\n          console.log(response.data)\r\n        })\r\n    };\r\n// cree une fonction qui fetch ton api pour te log, au clique envoie les donne de ton form vers ton api\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n        <h1>Create Account</h1>\r\n  \r\n        <label>\r\n          Email:\r\n          <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            required />\r\n        </label>\r\n  \r\n        <label>\r\n          Password:\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n            required />\r\n        </label>\r\n  \r\n        <label>\r\n          Country:\r\n          <select\r\n            name=\"country\"\r\n            value={country}\r\n            onChange={e => setCountry(e.target.value)}\r\n            required>\r\n            <option key=\"\"></option>\r\n            {countries.map(country => (\r\n              <option key={country}>{country}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n  \r\n        <label>\r\n          <input\r\n            name=\"acceptedTerms\"\r\n            type=\"checkbox\"\r\n            onChange={e => setAcceptedTerms(e.target.value)}\r\n            required />\r\n          I accept the terms of service\r\n        </label>\r\n  \r\n        <button>Submit</button>\r\n      </form>\r\n    );\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}