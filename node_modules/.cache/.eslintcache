[{"C:\\Users\\simon\\Documents\\GitHub\\comi\\src\\index.js":"1","C:\\Users\\simon\\Documents\\GitHub\\comi\\src\\App.js":"2","C:\\Users\\simon\\Documents\\GitHub\\comi\\src\\components\\Sidebar.js":"3","C:\\Users\\simon\\Documents\\GitHub\\comi\\src\\pages\\Mail.js":"4","C:\\Users\\simon\\Documents\\GitHub\\comi\\src\\pages\\NotFound.js":"5","C:\\Users\\simon\\Documents\\GitHub\\comi\\src\\components\\HeadApp.js":"6","C:\\Users\\simon\\Documents\\GitHub\\comi\\src\\components\\Mail\\ListeItemView.js":"7","C:\\Users\\simon\\Documents\\GitHub\\comi\\src\\components\\Mail\\TabsMailView.js":"8","C:\\Users\\simon\\Documents\\GitHub\\comi\\src\\components\\Mail\\SearchBar.js":"9"},{"size":483,"mtime":1620922985825,"results":"10","hashOfConfig":"11"},{"size":1992,"mtime":1620922985821,"results":"12","hashOfConfig":"11"},{"size":1090,"mtime":1620922985824,"results":"13","hashOfConfig":"11"},{"size":915,"mtime":1620931040784,"results":"14","hashOfConfig":"11"},{"size":163,"mtime":1620922985827,"results":"15","hashOfConfig":"11"},{"size":301,"mtime":1620922985821,"results":"16","hashOfConfig":"11"},{"size":163,"mtime":1620922985822,"results":"17","hashOfConfig":"11"},{"size":2230,"mtime":1620939169968,"results":"18","hashOfConfig":"11"},{"size":518,"mtime":1620922985823,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1vdw8im",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\simon\\Documents\\GitHub\\comi\\src\\index.js",[],["43","44"],"C:\\Users\\simon\\Documents\\GitHub\\comi\\src\\App.js",["45","46"],"// import logo from './logo.svg';\r\n// import './App.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Mails from \"./pages/Mail\";\r\nimport NotFound from \"./pages/NotFound\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    exact: true,\r\n    sidebar: () => null,\r\n    main: () => <h2>Home</h2>,\r\n  },\r\n  {\r\n    path: \"/mail\",\r\n    sidebar: () => <Sidebar />,\r\n    main: () => <Mails />,\r\n  },\r\n  {\r\n    path: \"*\",\r\n    sidebar: () => null,\r\n    main: () => <NotFound />,\r\n  },\r\n  {\r\n    path: \"mail/:id\",\r\n    sidebar: () => null,\r\n    main: () => <NotFound />,\r\n  }\r\n];\r\n\r\nfunction App() {\r\n  const isLogged = true;\r\n\r\n  return (\r\n    <Router>\r\n        <div className=\"body\">\r\n          <Switch>\r\n            {routes.map((route, index) => (\r\n              // You can render a <Route> in as many places\r\n              // as you want in your app. It will render along\r\n              // with any other <Route>s that also match the URL.\r\n              // So, a sidebar or breadcrumbs or anything else\r\n              // that requires you to render multiple things\r\n              // in multiple places at the same URL is nothing\r\n              // more than multiple <Route>s.\r\n              <Route\r\n                key={index}\r\n                path={route.path}\r\n                exact={route.exact}\r\n                children={<route.sidebar />}\r\n              />\r\n            ))}\r\n          </Switch>\r\n    \r\n\r\n          <Switch>\r\n            {routes.map((route, index) => (\r\n              // Render more <Route>s with the same paths as\r\n              // above, but different components this time.\r\n              <Route\r\n                key={index}\r\n                path={route.path}\r\n                exact={route.exact}\r\n                children={<route.main />}\r\n              />\r\n            ))}\r\n          </Switch>\r\n        </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\simon\\Documents\\GitHub\\comi\\src\\components\\Sidebar.js",[],"C:\\Users\\simon\\Documents\\GitHub\\comi\\src\\pages\\Mail.js",["47","48"],"import React, { useEffect, useState } from \"react\";\r\nimport HeadApp from \"../components/HeadApp\";\r\nimport MailView from \"../components/Mail/ListeItemView\";\r\nimport TabsMailView from \"../components/Mail/TabsMailView\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport \"./Mail.scss\";\r\nconst Mail = () => {\r\n\r\n\r\n  const [url, setUrl] = useState ([])\r\n\r\n  const changeVariable = (urlName) => {\r\n    setUrl(urlName);\r\n  } \r\n\r\n\r\n  return (\r\n    <div className=\"Mail-Page\">\r\n      <HeadApp>\r\n        <span onClick={() => changeVariable(\"unread\")}> Non lu(s)</span>\r\n        <span onClick={() => changeVariable(\"read\")}>   Email lu(s)</span>\r\n        <span onClick={() => changeVariable(\"project\")}> Projet</span>\r\n        <span onClick={() => changeVariable(\"bin\")}>    Corbeille</span>\r\n      </HeadApp>\r\n      <MailView />\r\n      <TabsMailView ChangeURL = { url } />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Mail;\r\n","C:\\Users\\simon\\Documents\\GitHub\\comi\\src\\pages\\NotFound.js",[],"C:\\Users\\simon\\Documents\\GitHub\\comi\\src\\components\\HeadApp.js",[],"C:\\Users\\simon\\Documents\\GitHub\\comi\\src\\components\\Mail\\ListeItemView.js",["49"],"import React from 'react';\r\nimport './ListeItemView.scss'\r\n\r\nconst ListeItemView = () => {\r\n    return (\r\n        null\r\n    );\r\n};\r\n\r\nexport default ListeItemView;","C:\\Users\\simon\\Documents\\GitHub\\comi\\src\\components\\Mail\\TabsMailView.js",["50","51","52","53"],"import React, { useEffect, useState } from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport \"./TabsMailView.scss\";\r\nconst axios = require('axios').default;\r\n\r\n\r\n\r\nconst TabsMailView = (props) => {\r\n\r\n    \r\n  \r\n    const [data, setData] = useState ([])\r\n    const [fetch, setFetch] = useState (true)\r\n    const [url, setUrl] = useState ([\"unread\"])\r\n    const [projet, setprojet] = useState (false)\r\n    let { ChangeURL } = props\r\n\r\n    useEffect(() => {\r\n      if (ChangeURL != url ) {\r\n        if (projet == false) {\r\n          setUrl(ChangeURL)\r\n          setFetch(true)\r\n        }\r\n        else if(projet == true){\r\n          console.log(url)\r\n          ChangeURL = url\r\n        }\r\n      }\r\n     \r\n      if (fetch) {\r\n          axios.get(`http://localhost:3000/messages/${url}`).then(function (response) {\r\n          setData(response.data);\r\n          setFetch(false)\r\n        })\r\n      } \r\n\r\n    }, [data,ChangeURL,fetch, url])\r\n\r\n\r\n    const changeVariableProject = (urlName) => {\r\n      console.log(1)\r\n      setUrl(urlName);\r\n      setprojet(true)\r\n      setFetch(true)\r\n    } \r\n    \r\n    const mailCreation = () => {\r\n      const liste = []\r\n\r\n      if (url !== \"project\") {\r\n        for (const message of data) {\r\n          liste.push(\r\n          <div>\r\n            <input type=\"checkbox\" class=\"check\" />\r\n            <div class=\"sender-img\">\r\n              <div class=\"profil-img\"></div>\r\n              <div class=\"mail-notification\"></div>\r\n            </div>\r\n            <p class=\"mail-title\">{message.title}</p>\r\n            <p class=\"mail-content\">\r\n            {message.content}\r\n            </p>\r\n          </div>\r\n          )\r\n        }\r\n      }\r\n      else{\r\n        for (const projet of data) {\r\n          liste.push(\r\n          <div>\r\n            <p onClick={() => changeVariableProject(`unread/${projet.name}`)} class=\"mail-title\">{projet.name}</p>\r\n          </div>\r\n          )\r\n        }\r\n      }\r\n    return liste\r\n  };\r\n\r\n  return (\r\n    <div className=\"content-msgPage\">\r\n      <SearchBar />\r\n      <div class=\"content-message\">\r\n        <span>Date</span>\r\n        <div class=\"mail\">\r\n        {mailCreation()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabsMailView;\r\n","C:\\Users\\simon\\Documents\\GitHub\\comi\\src\\components\\Mail\\SearchBar.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":3,"column":50,"nodeType":"60","messageId":"61","endLine":3,"endColumn":54},{"ruleId":"58","severity":1,"message":"62","line":35,"column":9,"nodeType":"60","messageId":"61","endLine":35,"endColumn":17},{"ruleId":"58","severity":1,"message":"63","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":26},{"ruleId":"58","severity":1,"message":"64","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":15},{"ruleId":"58","severity":1,"message":"65","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":13},{"ruleId":"66","severity":1,"message":"67","line":19,"column":21,"nodeType":"68","messageId":"69","endLine":19,"endColumn":23},{"ruleId":"66","severity":1,"message":"70","line":20,"column":20,"nodeType":"68","messageId":"69","endLine":20,"endColumn":22},{"ruleId":"66","severity":1,"message":"70","line":24,"column":24,"nodeType":"68","messageId":"69","endLine":24,"endColumn":26},{"ruleId":"71","severity":1,"message":"72","line":26,"column":23,"nodeType":"60","endLine":26,"endColumn":26},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'isLogged' is assigned a value but never used.","'useEffect' is defined but never used.","'Sidebar' is defined but never used.","'React' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","Assignments to the 'ChangeURL' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-global-assign","no-unsafe-negation"]